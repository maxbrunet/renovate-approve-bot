name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/renovatebot/renovate-approve-bot-bitbucket-cloud

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.0.0
        with:
          fetch-depth: 2

      - name: Set up Node.js
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # tag=v3.1.0
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run tests
        run: npm run jest --maxWorkers=2 --ci

  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.0.0
        with:
          fetch-depth: 2

      - name: Set up Node.js
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # tag=v3.1.0
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install Node.js dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  codeql-analyze:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.0.0
        with:
          fetch-depth: 2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@1fc1008278d05ba9455caf083444e6c5a1a3cfd8 # tag=v1.1.7
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@1fc1008278d05ba9455caf083444e6c5a1a3cfd8 # tag=v1.1.7

  build:
    needs: [codeql-analyze, lint, test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      packages: write
      pull-requests: write

    timeout-minutes: 10

    steps:
      # full checkout for semantic-release
      - name: Checkout repository
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.0.0
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # tag=v3.1.0
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install Node.js dependencies
        run: npm ci

      - name: Set up QEMU
        uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480 # renovate: tag=v1.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # renovate: tag=v1.6.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 # tag=v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container images
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # tag=v2.10.0
        with:
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: semantic-release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push container images
        if: ${{ env.IMAGE_TAG != '' }}
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # tag=v2.10.0
        with:
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          # IMAGE_TAG is set by @semantic-release/exec (see .releaserc file)
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
